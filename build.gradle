buildscript {
	ext {
		kotlinVersion = '1.0.4'
		springBootVersion = '1.4.1.RELEASE'
    jjwtVersion = '0.7.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

project.version = '0.0.1-SNAPSHOT'

jar {
	baseName = 'shardis'
	version = project.version
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}

processResources {
  filesMatching('**/application.yml') {
    expand(project.properties)
  }
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-actuator')
	compile('org.springframework.boot:spring-boot-actuator-docs')
	compile('org.springframework.boot:spring-boot-starter-cache')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-devtools')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-remote-shell')
	compile('org.springframework.retry:spring-retry')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-validation')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-websocket')
	compile("org.jetbrains.kotlin:kotlin-stdlib:${kotlinVersion}")
	compile("io.jsonwebtoken:jjwt:${jjwtVersion}")
  compile "org.springframework.boot:spring-boot-configuration-processor"
  kapt "org.springframework.boot:spring-boot-configuration-processor"
	runtime('com.h2database:h2')
	runtime('mysql:mysql-connector-java')
	runtime('org.postgresql:postgresql')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.restdocs:spring-restdocs-mockmvc')
}
