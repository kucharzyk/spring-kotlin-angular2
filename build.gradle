buildscript {

  ext {
    kotlinVersion = "1.0.4"
    springBootVersion = "1.4.1.RELEASE"
    jjwtVersion = "0.7.0"
    gradleNodePluginVersion = "0.13"
    reflectionsVersion = "0.9.10"
  }

  repositories {
    mavenCentral()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath group: "org.springframework.boot", name: "spring-boot-gradle-plugin", version: "${springBootVersion}"
    classpath group: "org.jetbrains.kotlin", name: "kotlin-gradle-plugin", version: "${kotlinVersion}"
    classpath group: "com.moowork.gradle", name: "gradle-node-plugin", version: "${gradleNodePluginVersion}"
  }
}

apply plugin: "kotlin"
apply plugin: "eclipse"
apply plugin: "spring-boot"
apply plugin: "com.moowork.node"

project.version = "0.0.1-SNAPSHOT"

node {
  version = "7.0.0"
  npmVersion = "3.10.8"
  download = true
  workDir = file("${project.buildDir}/node")
  nodeModulesDir = file("${project.projectDir}")
}

jar {
  baseName = "shardis"
  version = project.version
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

processResources {
  filesMatching("**/application.yml") {
    expand(project.properties)
  }
}
configurations {
  compile.exclude group: "org.springframework.boot", module: "spring-boot-starter-tomcat"
}


dependencies {
  compile group: "org.springframework.boot", name: "spring-boot-starter-actuator"
  compile group: "org.springframework.boot", name: "spring-boot-actuator-docs"
  compile group: "org.springframework.boot", name: "spring-boot-starter-cache"
  compile group: "org.springframework.boot", name: "spring-boot-starter-data-jpa"
  compile group: "org.springframework.boot", name: "spring-boot-devtools"
  compile group: "org.springframework.boot", name: "spring-boot-starter-mail"
  compile group: "org.springframework.boot", name: "spring-boot-starter-remote-shell"
  compile group: "org.springframework.boot", name: "spring-boot-starter-security"
  compile group: "org.springframework.boot", name: "spring-boot-starter-validation"
  compile group: "org.springframework.boot", name: "spring-boot-starter-undertow"
  compile group: "org.springframework.boot", name: "spring-boot-starter-web"
  compile group: "org.springframework.boot", name: "spring-boot-starter-websocket"
  compile group: "org.springframework.boot", name: "spring-boot-configuration-processor"
  kapt group: "org.springframework.boot", name: "spring-boot-configuration-processor"
  compile group: "org.hibernate", name: "hibernate-java8"
  compile group: "org.hibernate", name: "hibernate-envers"
  compile group: "com.fasterxml.jackson.datatype", name: "jackson-datatype-jsr310"
  compile group: "org.jetbrains.kotlin", name: "kotlin-stdlib", version: "${kotlinVersion}"
  compile group: "io.jsonwebtoken", name: "jjwt", version: "${jjwtVersion}"
  runtime group: "com.h2database", name: "h2"
  runtime group: "org.postgresql", name: "postgresql"
  testCompile group: "org.springframework.boot", name: "spring-boot-starter-test"
  testCompile group: "org.springframework.security", name: "spring-security-test"
  testCompile group: "org.springframework.restdocs", name: "spring-restdocs-mockmvc"
  testCompile group: "org.reflections", name: "reflections", version: "${reflectionsVersion}"
}

task npmBuild(type: NpmTask) {
  args = ["run", "build:prod"]
}

task npmTest(type: NpmTask) {
  args = ["run", "test:phantom"]
}

task npmServer(type: NpmTask) {
  args = ["run", "server:dev"]
}

npmInstall.dependsOn npmSetup

npmBuild.dependsOn npmInstall
npmTest.dependsOn npmInstall

processResources.dependsOn npmBuild

test.dependsOn npmTest

clean.delete << file("node_modules")
sourceSets {
  main.java.srcDirs += "src/main/kotlin"
}

